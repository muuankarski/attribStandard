{
    "contents" : "library(shiny)\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gridExtra)\n\n# Define server logic required to summarize and view the selected dataset\nshinyServer(function(input, output) {\n  \n  load(\"data/datPlot.RData\")\n  \n  #   output$caption <- renderText({\n  #     datPlot[1:4,1:4]\n  #     #textInput$varx\n  #   })\n  \n  \n  \n  variableInput <- reactive({\n    switch(input$predictor)\n  })\n  \n  \n  \n  \n  # Scatterplot\n  output$scatter <- renderPlot({\n    cbPalette <- c(\"#E69F00\",\"#56B4E9\",\"#999999\",\"#009E73\", \"#F0E442\", \"#0072B2\",\"#D55E00\", \"#CC79A7\")\n    \n    #varx <- datPlot$perGini\n    varx <- datPlot[, input$predictor]\n    ivA <- datPlot$socialBlame\n    ivB <- datPlot$individualBlame\n    group_general <- datPlot$group_general\n    cntry <- as.character(datPlot$cntry)\n    dat <- data.frame(ivA,ivB,varx,cntry,group_general)\n    dat1 <- dat[dat$group_general != \"Western Europe\",]\n    dat2 <- dat[dat$group_general == \"Western Europe\",]\n    plot1 <- ggplot(dat1, aes(x=varx, y=ivA, \n                              label=cntry,group=1)) +\n      geom_point(data=dat1, aes(color=group_general), size=3) +\n      geom_smooth(method=lm, se=FALSE, alpha=.5, linetype=\"dashed\", size=0.5) +  \n      geom_text(size=4, vjust=-0.8, hjust=0.5) +\n      # west reference\n      geom_point(data=dat2, aes(x=varx, \n                                y=ivA,\n                                color=group_general), \n                 alpha=.5, size=3) +\n      geom_text(data=dat2, aes(x=varx, \n                               y=ivA, \n                               label=cntry),\n                alpha=.5, size=4, vjust=-0.8, hjust=0.5) +\n      # west reference\n      labs(x = paste(\"Variable \", input$predictor,sep=\"\"),\n           y = \"Support for social blame type of explanation (%)\") + \n      scale_colour_manual(values=cbPalette) +\n      #       coord_cartesian(xlim=c(-25,100)) +\n      theme_minimal() +\n      theme(legend.title=element_blank()) +\n      theme(legend.text=element_text(size=12)) +\n      theme(legend.position=\"top\") +\n      theme(axis.title.y = element_text(size=12)) +\n      theme(axis.title.x = element_text(size=12)) +\n      theme(axis.text.y = element_text(size=12)) +\n      theme(axis.text.x = element_text(size=12)) +\n      #guides(color = guide_legend(nrow = 2)) +\n      theme(legend.key.size = unit(3, \"mm\"))\n    ## individual blame\n    plot2 <- ggplot(dat1, aes(x=varx, y=ivB, \n                              label=cntry,group=1)) +\n      geom_point(data=dat1, aes(color=group_general), size=3) +\n      geom_smooth(method=lm, se=FALSE, alpha=.5, linetype=\"dashed\", size=0.5) +  \n      geom_text(size=4, vjust=-0.8, hjust=0.5) +\n      # west reference\n      geom_point(data=dat2, aes(x=varx, \n                                y=ivB,\n                                color=group_general), \n                 alpha=.5, size=3) +\n      geom_text(data=dat2, aes(x=varx, \n                               y=ivB, \n                               label=cntry),\n                alpha=.5, size=4, vjust=-0.8, hjust=0.5) +\n      # west reference\n      labs(x = paste(\"Variable \", input$predictor,sep=\"\"),\n           y = \"Support for individual blame type of explanation (%)\") + \n      scale_colour_manual(values=cbPalette) +\n      #       coord_cartesian(xlim=c(-25,100)) +\n      theme_minimal() +\n      theme(legend.title=element_blank()) +\n      theme(legend.text=element_text(size=12)) +\n      theme(legend.position=\"top\") +\n      theme(axis.title.y = element_text(size=12)) +\n      theme(axis.title.x = element_text(size=12)) +\n      theme(axis.text.y = element_text(size=12)) +\n      theme(axis.text.x = element_text(size=12)) +\n      #guides(color = guide_legend(nrow = 2)) +\n      theme(legend.key.size = unit(3, \"mm\"))\n    \n    grid.arrange(plot1,plot2, ncol=2)\n  })\n  \n  output$correlation <- renderPrint({\n    varx <- datPlot[, input$predictor]\n    ivA <- datPlot$socialBlame\n    ivB <- datPlot$individualBlame\n    group_general <- datPlot$group_general\n    cntry <- as.character(datPlot$cntry)\n    dat <- data.frame(ivA,ivB,varx,cntry,group_general)\n    dat1 <- dat[dat$group_general != \"Western Europe\",]\n    CdvA <- cor(dat1$varx,dat1$ivA)\n    CdvB <- cor(dat1$varx,dat1$ivB)\n    title <- c(\"Social Blame\",\n               \"Individual Blame\")\n    corr <- c(CdvA,CdvB)\n    cordat <- data.frame(title,corr)\n    cordatT <- as.data.frame(t(cordat))\n    library(xtable)\n    print.xtable(xtable(cordatT), type=\"html\",width=600,\n                 include.rownames=FALSE,\n                 include.colnames=FALSE, )\n  })\n  \n  \n  \n})",
    "created" : 1386696079657.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1901074939",
    "id" : "1E2C84F8",
    "lastKnownWriteTime" : 1386697322,
    "path" : "~/ShinyApps/attribStandard/server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}